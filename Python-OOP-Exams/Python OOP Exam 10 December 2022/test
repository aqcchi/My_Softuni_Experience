from unittest import TestCase, main

from toy_store import ToyStore

class TestToyStore(TestCase):

    def setUp(self) -> None:
        self.store = ToyStore()

    def test_shelf_not_in_toy_shelf_raises_exception(self):
        with self.assertRaises(Exception) as ex:
            self.store.add_toy("H", "cat plushie")

        self.assertEqual("Shelf doesn't exist!", str(ex.exception))

    def test_toy_already_on_shelf_raises_exception(self):
        self.store.toy_shelf["A"] = "cat plushie"
        with self.assertRaises(Exception) as ex:
            self.store.add_toy("A", "cat plushie")

        self.assertEqual("Toy is already in shelf!", str(ex.exception))

    def test_another_toy_already_on_shelf_raises_exception(self):
        self.store.toy_shelf["A"] = "dog plushie"
        with self.assertRaises(Exception) as ex:
            self.store.add_toy("A", "cat plushie")

        self.assertEqual("Shelf is already taken!", str(ex.exception))

    def test_successful_shelving_of_toy(self):
        result = self.store.add_toy("A", "cat plushie")
        self.assertEqual("Toy:cat plushie placed successfully!", result)
        self.assertEqual({'A': 'cat plushie', 'B': None, 'C': None, 'D': None, 'E': None, 'F': None, 'G': None},
                         self.store.toy_shelf)

    def test_shelf_does_not_exist_raises_exception(self):
        with self.assertRaises(Exception) as ex:
            self.store.remove_toy("H", "cat plushie")

        self.assertEqual("Shelf doesn't exist!", str(ex.exception))

    def test_toy_does_not_exist_on_shelf_raises_exception(self):
        with self.assertRaises(Exception) as ex:
            self.store.remove_toy("A", "cat plushie")

        self.assertEqual("Toy in that shelf doesn't exists!", str(ex.exception))

    def test_successful_removal_of_toy(self):
        self.store.toy_shelf["A"] = "cat plushie"
        result = self.store.remove_toy("A", "cat plushie")
        self.assertEqual("Remove toy:cat plushie successfully!", result)
        self.assertEqual({'A': None, 'B': None, 'C': None, 'D': None, 'E': None, 'F': None, 'G': None},
                         self.store.toy_shelf)

if __name__ == "__main__":
    main()
